[
  {
    "id": 1,
    "question": "What is React?",
    "answer": "React is a JavaScript library for building user interfaces, developed by Facebook. It allows developers to build single-page applications by creating reusable UI components."
  },
  {
    "id": 2,
    "question": "What is the difference between `state` and `props` in React?",
    "answer": "`State` is used to store data that can change over time in a component, while `props` are used to pass data from a parent component to a child component. State is mutable, but props are immutable."
  },
  {
    "id": 3,
    "question": "What is JSX in React?",
    "answer": "JSX (JavaScript XML) is a syntax extension for JavaScript that looks similar to HTML. It is used with React to describe what the UI should look like. React components can be written using JSX."
  },
  {
    "id": 4,
    "question": "What is a component in React?",
    "answer": "A component in React is a reusable piece of the UI that can accept inputs (props) and manage its own state. Components can be functional or class-based."
  },
  {
    "id": 5,
    "question": "What is the virtual DOM in React?",
    "answer": "The virtual DOM is a lightweight copy of the actual DOM. React updates the virtual DOM first and then compares it with the real DOM to determine the minimal number of changes required to update the UI."
  },
  {
    "id": 6,
    "question": "What are hooks in React?",
    "answer": "Hooks are functions that allow you to use React features like state and lifecycle methods in functional components. Examples include `useState`, `useEffect`, and `useContext`."
  },
  {
    "id": 7,
    "question": "What is `useEffect` in React?",
    "answer": "`useEffect` is a hook that performs side effects in functional components, such as fetching data or updating the DOM. It runs after the component renders and can be controlled by providing a dependency array."
  }
]
